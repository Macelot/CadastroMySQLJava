/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * telaUsuariosDetalhe.java
 *
 * Created on Mar 23, 2013, 5:47:15 PM
 */
package tela;

import controle.ControleUsuario;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import utilidades.Funcoes;
import utilidades.Mascara;
import utilidades.JNumberFormatField;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;


        
/**
 *
 * @author marcelojtelles
 */
public class TelaUsuariosDetalhe extends javax.swing.JInternalFrame {
    public static String ativo, consulta = "", nomeTabela = "usuarios", nome, usuario, oqueBusca, grava, altera, deleta, senha, dataCadastro, idUsuario;
    int contUsuario, versao,pergunta;
    public static String[] idUsuarioSelecionado = new String[500];
    public static int id;
    public byte[] imagem=null;
    public static ImageIcon imagemRecebidaDobanco;
    public Double salario;
    public String celular;
    public String sexo;
    public java.sql.Date nascimento;
    ImageIcon img;
    Funcoes k = new Funcoes();

    int result;
    /** Creates new form telaUsuariosDetalhe */
    public TelaUsuariosDetalhe() {
        initComponents();
        
        //try para buscar data e hora. Será informado no cadastro do usuário.
        try {
            Funcoes hora = new Funcoes();
            txtDataCadastro.setText(hora.buscaDataHora());
        } catch (Exception ex) {
            System.out.println("Erro na busca da Data e hora");
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNome = new javax.swing.JTextField();
        txtUsuario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDataCadastro = new javax.swing.JTextField();
        btnInserir = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        pwdSenha = new javax.swing.JPasswordField();
        pwdSenha2 = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        txtImagem = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        lblImagem = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        dtcNascimento = new com.toedter.calendar.JDateChooser();
        txtCelular = new javax.swing.JFormattedTextField(utilidades.Mascara.defineMascara("(###)####-####"));
        radMasculino = new javax.swing.JRadioButton();
        radFeminino = new javax.swing.JRadioButton();
        txtSalario = new JNumberFormatField(15,2);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(null);
        getContentPane().add(txtNome);
        txtNome.setBounds(170, 10, 210, 25);
        getContentPane().add(txtUsuario);
        txtUsuario.setBounds(170, 40, 210, 25);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Nome  Completo");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 150, 25);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Usuário");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 40, 150, 25);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Senha");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 70, 150, 25);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Repetir Senha");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 100, 150, 25);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Data de cadastro");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 130, 150, 25);

        txtDataCadastro.setEditable(false);
        getContentPane().add(txtDataCadastro);
        txtDataCadastro.setBounds(170, 130, 210, 25);

        btnInserir.setText("Inserir");
        btnInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirActionPerformed(evt);
            }
        });
        getContentPane().add(btnInserir);
        btnInserir.setBounds(70, 340, 84, 29);

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAtualizar);
        btnAtualizar.setBounds(180, 340, 100, 29);

        btnDeletar.setText("Deletar");
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });
        getContentPane().add(btnDeletar);
        btnDeletar.setBounds(300, 340, 89, 29);

        jButton4.setText("Cancelar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(410, 340, 98, 29);
        getContentPane().add(pwdSenha);
        pwdSenha.setBounds(170, 70, 210, 25);
        getContentPane().add(pwdSenha2);
        pwdSenha2.setBounds(170, 100, 210, 25);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Imagem");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(410, 30, 70, 25);

        txtImagem.setEditable(false);
        getContentPane().add(txtImagem);
        txtImagem.setBounds(490, 30, 240, 25);

        btnBuscar.setText("buscar arquivo de imagem");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar);
        btnBuscar.setBounds(490, 60, 230, 29);

        lblImagem.setBackground(new java.awt.Color(0, 0, 0));
        lblImagem.setText("...");
        getContentPane().add(lblImagem);
        lblImagem.setBounds(550, 100, 177, 236);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Salário");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(10, 160, 150, 25);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Celular");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(10, 190, 150, 25);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Nascimento");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(10, 220, 150, 25);

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Sexo");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(10, 250, 150, 25);

        dtcNascimento.setMaxSelectableDate(new java.util.Date(1357009266000L));
        dtcNascimento.setMinSelectableDate(new java.util.Date(-2208973946000L));
        getContentPane().add(dtcNascimento);
        dtcNascimento.setBounds(170, 220, 180, 25);
        getContentPane().add(txtCelular);
        txtCelular.setBounds(170, 190, 210, 25);

        radMasculino.setText("Masculino");
        radMasculino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radMasculinoActionPerformed(evt);
            }
        });
        getContentPane().add(radMasculino);
        radMasculino.setBounds(170, 250, 120, 25);

        radFeminino.setText("Feminino");
        radFeminino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radFemininoActionPerformed(evt);
            }
        });
        getContentPane().add(radFeminino);
        radFeminino.setBounds(290, 250, 120, 23);
        getContentPane().add(txtSalario);
        txtSalario.setBounds(170, 160, 210, 25);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirActionPerformed
    // TODO add your handling code here:
    ativo = "1";
    versao = 1;
    dataCadastro = txtDataCadastro.getText();
    
    if (txtNome.getText() == null || txtNome.getText().equals("")){
        JOptionPane.showMessageDialog(null, "O campo Nome Completo é obrigatório.");
        return;
    }else{
        nome = txtNome.getText();
    }
    
    if (new String (pwdSenha.getPassword()).compareTo(new String (pwdSenha2.getPassword()))!=0){
        JOptionPane.showMessageDialog(null,"o Campo Senha e Repetir Senha devem ser iguais");
        pwdSenha.requestFocus(true);
        return;
    }else{
        senha = new String (pwdSenha.getPassword());
    }
    
    if (txtUsuario.getText() == null || txtUsuario.getText().equals("")){
        JOptionPane.showMessageDialog(null, "O campo usuário é obrigatório.");
        return;
    }else{
        usuario = txtUsuario.getText();
    }
    
    
    
    salario = ((JNumberFormatField)txtSalario).getValue().doubleValue();
    
    celular = txtCelular.getText();
    try{
        java.util.Date dt = dtcNascimento.getDate(); 
        java.sql.Date d = new java.sql.Date (dt.getTime()); 
        nascimento=d;
    }catch (Exception ex){
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");  
        java.sql.Date data;  
            try {
                data = new java.sql.Date(format.parse(k.buscaData()).getTime());
                nascimento= data;
            } catch (Exception ex1) {
                Logger.getLogger(TelaUsuariosDetalhe.class.getName()).log(Level.SEVERE, null, ex1);
            }
       nascimento=null;//eh decidicolocar nulo caso não for definida a data de nascimento
    }
    
    if (radMasculino.isSelected()){
        sexo = "M";
    }
    if (radFeminino.isSelected()){
        sexo = "F";
    }
    
  
    try { 
        if (txtImagem.getText().compareTo("")!=0){
            //imagem = k.imageToByte(txtImagem.getText());
            imagem = k.imageToByte(img.getImage());
        }
    } catch (Exception ex) {
        System.out.println("sem foto...");
        //Logger.getLogger(telaUsuariosDetalhe.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    
    ControleUsuario u = new ControleUsuario();
    u.getUsuario().setNomeCompleto(nome);
    u.getUsuario().setUsuario(usuario);
    u.getUsuario().setSenha(senha);
    u.getUsuario().setDataCadastro(dataCadastro);
    u.getUsuario().setAtivo(ativo);
    u.getUsuario().setVersao(Integer.toString(versao));
    u.getUsuario().setImagem(imagem);
    u.getUsuario().setSalario(salario);
    u.getUsuario().setCelular(celular);
    u.getUsuario().setNascimento(nascimento);
    u.getUsuario().setSexo(sexo);

    result = u.inserir();
    System.out.println(" r"+result);
    if (result==1){
        JOptionPane.showMessageDialog(this, "Usuario inserido com sucesso.");
        txtNome.setText("");
        txtUsuario.getText();
        pwdSenha.getPassword();
        pwdSenha2.getPassword();
        this.setVisible(false);
        k.reloadUsuarios(this);
    }else{
        JOptionPane.showMessageDialog(this, "Erro ao inserir usuário.");
    }
   
}//GEN-LAST:event_btnInserirActionPerformed

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
// TODO add your handling code here:
    this.setVisible(false);
}//GEN-LAST:event_jButton4ActionPerformed

private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
    // TODO add your handling code here:
    pergunta = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja atualizar o registro?");
    if (pergunta == 0){ 
        ativo = "1";
        versao = 1;
        dataCadastro = txtDataCadastro.getText();

        if (txtNome.getText() == null || txtNome.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo Nome Completo é obrigatório.");
            return;
        }else{
            nome = txtNome.getText();
        }

        if (new String (pwdSenha.getPassword()).compareTo(new String (pwdSenha2.getPassword()))!=0){
            JOptionPane.showMessageDialog(null,"o Campo Senha e Repetir Senha devem ser iguais");
            pwdSenha.requestFocus(true);
            return;
        }else{
            senha = new String (pwdSenha.getPassword());
        }

        if (txtUsuario.getText() == null || txtUsuario.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo usuário é obrigatório.");
            return;
        }else{
            usuario = txtUsuario.getText();
        }
        
        salario = ((JNumberFormatField)txtSalario).getValue().doubleValue();
        celular = txtCelular.getText();
        try{
            java.util.Date dt = dtcNascimento.getDate(); 
            java.sql.Date d = new java.sql.Date (dt.getTime()); 
            nascimento=d;
        }catch (Exception ex){
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");  
            java.sql.Date data;  
                try {
                    data = new java.sql.Date(format.parse(k.buscaData()).getTime());
                    nascimento= data;
                } catch (Exception ex1) {
                    Logger.getLogger(TelaUsuariosDetalhe.class.getName()).log(Level.SEVERE, null, ex1);
                }
                nascimento=null;//eh decidicolocar nulo caso não for definida a data de nascimento

        }

        if (radMasculino.isSelected()){
            sexo = "M";
        }
        if (radFeminino.isSelected()){
            sexo = "F";
        }
        

        ControleUsuario u = new ControleUsuario();
        u.getUsuario().setNomeCompleto(nome);
        u.getUsuario().setUsuario(usuario);
        u.getUsuario().setSenha(senha);
        u.getUsuario().setDataCadastro(dataCadastro);
        u.getUsuario().setAtivo(ativo);
        u.getUsuario().setVersao(Integer.toString(versao));
        u.getUsuario().setSalario(salario);
        u.getUsuario().setCelular(celular);
        u.getUsuario().setSexo(sexo);
        u.getUsuario().setNascimento(nascimento);
        
        
        ImageIcon imageIcon;
        //imageIcon = new ImageIcon(imagemRecebidaDobanco.getImage());
        
        try{
            if(imagemRecebidaDobanco.getImage() != null){            
                imageIcon  = new ImageIcon(imagemRecebidaDobanco.getImage()); 
                u.getUsuario().setImagem(k.imageToByte(imageIcon.getImage()));
            }  
        }catch(Exception ex){
            System.out.println("Cadastro sem imagem...");
        } 
        
        
        try { 
            if (txtImagem.getText().compareTo("")!=0){
                System.out.println("txtImagem.getText()="+txtImagem.getText());
                //imagem = k.imageToByte(txtImagem.getText());
                imagem = k.imageToByte(img.getImage());
                
                u.getUsuario().setImagem(imagem);
            }
        } catch (Exception ex) {
            Logger.getLogger(TelaUsuariosDetalhe.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
          
        
        
                
        
        

        result = u.alterar(id);
        if (result==1){
            JOptionPane.showMessageDialog(this, "Usuário atualizado com sucesso.");
            txtNome.setText("");
            txtUsuario.setText("");
            pwdSenha.setText("");
            pwdSenha2.setText("");
            this.setVisible(false);
            //telaUsuarios k = new telaUsuarios();
            k.reloadUsuarios(this);
        }else{
            JOptionPane.showMessageDialog(this, "Erro ao Atualizar usuário.");
        }
    }
   
}//GEN-LAST:event_btnAtualizarActionPerformed

private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
// TODO add your handling code here:
    JFileChooser escolheArquivo = new JFileChooser(); //criamos uma variável para armazenar o fileChooser
    escolheArquivo.showOpenDialog(this); //Estamos abrindo a janela para navegar nos arquivos do computador mesmo caso as caixas de mensagem podemos colocar null ou this
    File arquivoEscolhido = escolheArquivo.getSelectedFile(); //estamos criando uma variável para receber o arquivo escolhido
    String nomeArquivo = arquivoEscolhido.getAbsolutePath(); //estamos criando uma variável para armazenar o caminho(juntamente com o nome) do arquivo
    txtImagem.setText(nomeArquivo); //estamos colocando caminho e nome do arquivo na caixa de texto
    
    
    try{
        String formato = k.getFormatName(arquivoEscolhido);
        if (formato.equals("JPEG")){
            System.out.println("formato válido");
            System.out.println("imagem no formato "+formato);
            
            try{
                //redimensionar

                img = new ImageIcon((txtImagem.getText()));  
                //img.setImage(img.getImage().getScaledInstance(35, 47, 100));
                //aqui começa a ficar interessante. Precisamos criar uma imagem
                //de 354X472 mas não podemos apenas colocar estes números,
                //pois vai alongar/espremer a imagem
                //temos que verificar o tamanho da imagem e apartir dai definir 
                //o tamanho da nova imagem
                int w,h,novoW1,novoW,novoH1,novoH;
                novoW1 = img.getIconWidth();
                novoW = img.getIconWidth();
                w = img.getIconWidth();

                novoH1 = img.getIconHeight();
                novoH = img.getIconHeight();
                h = img.getIconHeight();

                int w_=177;
                int h_=236;

                if ((h>h_)||(w>w_)){
                    if (w>w_){
                        novoW=w_;
                        novoH=(w_*h)/w;
                    }else{
                        novoW=w;
                        novoH=h;
                    }

                    if (novoH>h_){
                        novoH1=h_;
                        novoW1=(h_*novoW)/novoH;
                    }else{
                        novoW1=novoW;
                        novoH1=novoH;
                    }
                }

                img.setImage(img.getImage().getScaledInstance(novoW1,novoH1, 100));


                lblImagem.setIcon(img);

                //lblImagem.setIcon(new javax.swing.ImageIcon(nomeArquivo));
            }catch(Exception e){
                System.out.println("erro na exibição da imagem");
            }
               
        }else{
            JOptionPane.showMessageDialog(this,"O formato "+formato+" é inválido.\nEscolha uma imagem em JPEG ou seja extensão .jpg");
        }
    }catch (Exception ex){
        System.out.println("O arquivo escolhido não é uma imagem válida");
    }
    
   
}//GEN-LAST:event_btnBuscarActionPerformed

private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
// TODO add your handling code here:
    pergunta = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja deletar o registro?");
    if (pergunta ==0){
        int result = 0;
        ControleUsuario control = new ControleUsuario();
        result = control.deletar(id);
        //this.setVisible(false);
        if (result==1){
            JOptionPane.showMessageDialog(this, "Usuário deletado com sucesso.");
            this.setVisible(false);
            k.reloadUsuarios(this);
        }

    }
}//GEN-LAST:event_btnDeletarActionPerformed

private void radMasculinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radMasculinoActionPerformed
// TODO add your handling code here:
    if (radMasculino.isSelected()){
        radFeminino.setSelected(false);
    }
}//GEN-LAST:event_radMasculinoActionPerformed

private void radFemininoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radFemininoActionPerformed
// TODO add your handling code here:
    if (radFeminino.isSelected()){
        radMasculino.setSelected(false);
    }
}//GEN-LAST:event_radFemininoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnBuscar;
    public static javax.swing.JButton btnDeletar;
    public static javax.swing.JButton btnInserir;
    public static com.toedter.calendar.JDateChooser dtcNascimento;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JLabel lblImagem;
    public static javax.swing.JPasswordField pwdSenha;
    public static javax.swing.JPasswordField pwdSenha2;
    public static javax.swing.JRadioButton radFeminino;
    public static javax.swing.JRadioButton radMasculino;
    public static javax.swing.JTextField txtCelular;
    public static javax.swing.JTextField txtDataCadastro;
    private javax.swing.JTextField txtImagem;
    public static javax.swing.JTextField txtNome;
    public static javax.swing.JTextField txtSalario;
    public static javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
